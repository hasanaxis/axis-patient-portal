version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: axis-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-axis_admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-axis_secure_password}
      POSTGRES_DB: ${DB_NAME:-axis_portal}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - axis-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-axis_admin}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: axis-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-axis_redis_password}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - axis-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: axis-backend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgresql://${DB_USER:-axis_admin}:${DB_PASSWORD:-axis_secure_password}@postgres:5432/${DB_NAME:-axis_portal}
      REDIS_URL: redis://:${REDIS_PASSWORD:-axis_redis_password}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
      PORT: 3001
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./mock-data:/app/mock-data
    networks:
      - axis-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: axis-frontend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      VITE_API_URL: ${VITE_API_URL:-http://localhost:5000/api/v1}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - axis-network
    depends_on:
      - backend
    command: npm run dev

  nginx:
    image: nginx:alpine
    container_name: axis-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - axis-network
    depends_on:
      - backend
      - frontend

networks:
  axis-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: